#image: Visual Studio 2015

install:
  - ps: (new-object Net.WebClient).DownloadString("https://raw.github.com/madskristensen/ExtensionScripts/master/AppVeyor/vsix.ps1") | iex

install:
  - ps: >-
      (New-Object System.Net.WebClient).DownloadFile('https://download.microsoft.com/download/D/9/9/D994CE20-DE0D-494B-BAA0-C3FC20E5E989/Dev14/EN/SSDTSetup.exe','c:\SSDTSetup.exe');
      $pinvokes = @'
        [DllImport("user32.dll", CharSet=CharSet.Auto)]
        public static extern IntPtr FindWindow(string className, string windowName);
        [DllImport("user32.dll")]
        [return: MarshalAs(UnmanagedType.Bool)]
        public static extern bool SetForegroundWindow(IntPtr hWnd);
        [DllImport("user32.dll")]
        public static extern IntPtr FindWindowEx(IntPtr parentHandle, IntPtr childAfter, string className,  string  windowTitle);
      '@;
      Add-Type -MemberDefinition $pinvokes -Name NativeMethods -Namespace MyUtils;
      Add-Type -AssemblyName System.Windows.Forms;
      Start-Process C:\SSDTSetup.exe;
      Sleep -Seconds 2;
      $hwnd = [MyUtils.NativeMethods]::FindWindow("WixStdBA", "Microsoft SQL Server Data Tools for Visual Studio 2015");
      Sleep -Seconds 1;
      [MyUtils.NativeMethods]::SetForegroundWindow($hwnd);
      [System.Windows.Forms.SendKeys]::SendWait("{TAB}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{TAB}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{TAB}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{TAB}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{TAB}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{ENTER}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{TAB}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait(" ");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{TAB}");
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{ENTER}");
      Sleep -Seconds 60;
      while ([MyUtils.NativeMethods]::FindWindowEx($hwnd, 0, "button", "Close") -eq 0) { }
      Sleep -Seconds 1;
      [System.Windows.Forms.SendKeys]::SendWait("{ENTER}");

#before_build:
#  - ps: Vsix-IncrementVsixVersion | Vsix-UpdateBuildVersion
#  - ps: Vsix-TokenReplacement TeamCoding\source.extension.cs 'Version = "([0-9\\.]+)"' 'Version = "{version}"'


build_script:
  - nuget restore -Verbosity quiet
  - msbuild /p:configuration=Release /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal /v:m

#after_test:
#  - ps: Vsix-PushArtifacts | Vsix-PublishToGallery

on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))